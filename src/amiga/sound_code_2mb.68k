
		.global osd_sound_start
		.global osd_music_stop
		.global music_tick
		.global	get_enabled_interrupts_value
		.global	restore_audio
		.global	setup_audio
		

* sound engine and also highscore management, common to all versions
	
.include "gyruss.inc"
.include "sounds.inc"
.include "mixer.inc"

	
setup_audio:
	* soundfx lib
	lea		_custom,a6
	lea		blank_sound,a0
	move.l	a0,(0xA0,a6)
	move.l	a0,(0xB0,a6)
	move.l	a0,(0xC0,a6)
	move.l	a0,(0xD0,a6)
	move.l	system_vbr,a0
	moveq	#1,d0	| PAL
	jsr		_mt_install_cia


*	moveq	#4,d1
*	* Sample 1
*	lea.l	credit_sound,a2	
*	move.l	(mfx_length,a2),a0 | Sample source
*	move.l	a0,a1					| Pre-processed destination
*	move.l	(mfx_length,a2),d0			| Sample size
*	jbsr		ConvertSampleDivide



	* Setup the mixer
	move.w	#MIX_PAL,d0					| Set video system to PAL
	lea.l	mixer_buffer,a0				| Fetch Chip RAM buffer
	jbsr	MixerSetup					| Set up the mixer

	* Start the mixer interrupt handler
	move.l	system_vbr,a0			| Set VBR
	jbsr	MixerInstallHandler			| Install the mixer IRQ handler

	* Start the mixer
	jbsr		MixerStart
	rts
	
restore_audio:
	jbsr	MixerStop
	jbsr	MixerRemoveHandler
	
	move.l	system_vbr,a0
	lea	_custom,a6
	jsr		_mt_remove_cia
	rts
	
	
osd_music_stop:
	movem.l	d0/a0/a6,-(a7)
	
 	lea		_custom,a6
	clr.b	music_playing
    jsr		_mt_end
    clr.w   music_tick   | not playing anymore
	move.b	#-1,music_track_start_number
	movem.l	(a7)+,d0/a0/a6
	rts
	
get_enabled_interrupts_value:	
	move.w	#0xC038+1<<10,d0
	rts
	
stop_death_ray:
	move.w	laser_channel,d0
	jeq		10f
	BREAKPOINT	"LASER STOP"
	* command 8a: stop laser loop
	jbsr	MixerStopFX
	clr.w	laser_channel
10:
	rts
	
stop_humming:
	move.w	humming_channel,d0
	jeq		10f
	* command 82: stop humming loop
	jbsr	MixerStopFX
	clr.w	humming_channel
10:
	rts
	
* tunes sounds are: sound index followed by 0x15,0x16,0x17 (that we ignore!)
osd_sound_start:
	movem.l	d0/d1/a0/a1/a6,-(a7)
	
	and.w	#0xFF,d0
	jne		0f
	* stop all sounds, specially looped
	jbsr	stop_humming
	jbsr	stop_death_ray
	jra		10f
0:
	cmp.b	#0x24,d0
	jne		0f
1:
	jbsr	osd_music_stop
	jra		10f
0:


	cmp.b	#0x80+DEATH_RAY_SND,d0
	jne		0f
	jbsr	stop_death_ray
	jra		10f
0:
	cmp.b	#0x80+HUMMING_SND,d0
	jne		0f
	jbsr	stop_humming
	jra		10f
0:
	tst.b	d0
	jmi 	10f		| any other sound stop command is ignored
	* original sound stop commands have bit 7 set.
	* plus the sound ID. But as we're using 1 channel only, we cannot
	* stop just this sound fx
	sub.l	a1,a1
	cmp.b	#DEATH_RAY_SND,d0
	jeq		50f
	cmp.b	#HUMMING_SND,d0
	jne		52f
	lea		humming_channel,a1
	jra		51f
50:
	lea		laser_channel,a1
51:
	tst.w	(a1)
	jne		10f		| already playing
52:
	lsl.w	#3,d0
	lea		sound_table,a0
	add.w	d0,a0
	move.w	(a0),d1	| sound type
	beq.b	11f		| no sound, but not expected!
	cmp.w	#3,d1
	jeq		10f
2:
	cmp.w	#1,d1
	bne.b	4f		| music module
	moveq	#DMAF_AUD3,d0									
	move.l	(4,a0),a0
	jbsr		MixerPlayFX
	cmp.l	#0,a1
	jeq		10f
	move.w	d0,(a1)		| store playing virtual channel
10:

	movem.l	(a7)+,d0/d1/a0/a1/a6
	rts
11:
	move.w	d0,d1
	lsr.w	#3,d1
	BREAKPOINT	"unknown sound played in D1"
	jra		10b 
	
	* music
4:
	* don't play if already playing
	* (music_tick value is not important for looped tunes
	* as long as it's not zero)


	* here we allow music to override another looping music
	*tst.w	music_tick
	*bne.b	10b
	* play the proper module pattern
	* load up the countdown if loop
	
	move.w	(2,a0),d1	| pattern number in .mod file
	* since it's not zero, next vbl tick will play the music
	
	cmp.b	music_track_start_number(pc),d1
	beq.b	10b		| same track, skip

    movem.l d0-a6,-(a7)
	bsr		osd_music_stop
    lea _custom,a6
 	movem.l	d0/a0,-(a7)
	lea	gyruss_tunes,a0
	
	move.b	d1,music_track_start_number
	move.w	d1,d0	
    sub.l   a1,a1		| samples are in the module
    jsr _mt_init
	movem.l	(a7)+,d0/a0

    * set master volume a little less loud if needed
	move.b	(6,a0),music_volume
	move.b	(7,a0),music_loops
	move.w	(2,a0),music_pattern	| pattern number in .mod file
	move.w	(4,a0),d2

	move.w	d2,music_duration
	move.w	d2,music_tick

    moveq	#0,d0
	move.b	music_volume(pc),d0
    jsr	_mt_mastervol
	st.b	music_playing
    jsr _mt_start
    movem.l (a7)+,d0-a6
	
6:
	jra	10b

	
	.include	"sound_entries_2mb.68k"

	
music_playing:
	.byte	0
looped_sound_enabled:
	.byte	0
music_loops:
	.byte	0
music_volume:
	.byte	0
music_track_start_number:
	.word	-1
music_pattern:
	.word	0
music_tick:
	.word	0

music_duration:
	.word	0
humming_channel:
	.word	0
laser_channel:
	.word	0
	
	.section	.bsschip
	
mixer_buffer:
	.skip 	mixer_buffer_size
	
blank_sound:
	.skip	16
